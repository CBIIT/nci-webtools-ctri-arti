services:
  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
    env_file:
      - ./server/.env
    develop:
      watch:
      - action: sync+restart
        path: ./server
        target: /server
        ignore:
          - ./server/node_modules
      - action: rebuild
        path: server/package.json
        ignore:
          - ./server/node_modules
    depends_on:
      - postgres
        
  postgres:
    image: pgvector/pgvector:pg16 
    ports:
      - "5432:5432"
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      - TZ=America/New_York
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres

  # Local Auth Server (Optional)
  # Before running this, ensure that you've created a key.pem file in the server directory (eg: run `npm run cert`)
  # Manual Steps: Create a Realm with a Client (with Client authentication enabled), then generate a client secret and set it in the .env file
  # Using the port below, the discovery url will be: https://localhost:8443/realms/${realm-name}/.well-known/openid-configuration
  keycloak:
    profiles: [auth]
    image: quay.io/keycloak/keycloak:26.1
    command: start
    ports:
      - "8443:8443"
    volumes:
      - ./server/key.pem:/etc/key.pem
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/postgres
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
      - KC_HOSTNAME=localhost
      - KC_HTTP_ENABLED=false
      - KC_HTTPS_CERTIFICATE_FILE=/etc/key.pem
      - KC_HTTPS_CERTIFICATE_KEY_FILE=/etc/key.pem
    depends_on:
      - postgres